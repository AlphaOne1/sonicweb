# Copyright the SonicWeb contributors.
# SPDX-License-Identifier: MPL-2.0

name: Release

on:
    release:
        types:
            - published

permissions: read-all

jobs:
    Build:
        permissions:
            contents: write
        strategy:
            matrix:
                go-version:
                    - stable
                architecture:
                    - "386"
                    - "amd64"
                    - "arm64"
                os:
                    - linux
                    - windows
                    - darwin
                exclude:
                    - os: darwin
                      architecture: 386
        runs-on: ubuntu-latest
        steps:
            - name: Harden Runner
              uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
              with:
                  egress-policy: audit

            - name: Install Go
              uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
              with:
                  go-version: ${{ matrix.go-version }}

            - name: Install nfpm
              if: matrix.os == 'linux'
              run: |
                  go install github.com/goreleaser/nfpm/v2/cmd/nfpm@v2.43.0
                  echo "$(go env GOPATH)/bin" >> GITHUB_PATH

            - name: Checkout
              uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
              with:
                  fetch-depth: 1

            - name: Build
              env:
                CGO_ENABLED: "0"
                GOOS: ${{matrix.os}}
                GOARCH: ${{matrix.architecture}}
              run: make

            - name: Build Package
              if: matrix.os == 'linux'
              env:
                  CGO_ENABLED: "0"
                  GOOS: ${{matrix.os}}
                  GOARCH: ${{matrix.architecture}}
              run: make package

            - name: Compress xz
              if: matrix.os != 'windows'
              run: xz -9 sonic-*-*

            - name: Compress 7z (verified path via system 7zip)
              if: matrix.os == 'windows'
              run: |
                sudo apt-get update
                sudo apt-get install -y p7zip-full
                7z a -t7z -ssw -mx=9 "sonic-${{ matrix.os }}-${{ matrix.architecture }}.7z" "sonic-${{ matrix.os }}-${{ matrix.architecture }}.exe"

            - name: Upload Non-Windows Release (via GitHub CLI)
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                shopt -s nullglob
                for file in sonic-*-* SonicWeb*.rpm SonicWeb*.deb
                do
                    gh release upload "${{ github.event.release.tag_name }}" "$file" --clobber
                done