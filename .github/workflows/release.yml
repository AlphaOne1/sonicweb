# Copyright the SonicWeb contributors.
# SPDX-License-Identifier: MPL-2.0

name: Release

on:
    release:
        types:
            - published

permissions: read-all

concurrency:
    group: release-${{ github.event.release.tag_name }}
    cancel-in-progress: true

jobs:
    Build:
        permissions:
            contents: write
        strategy:
            matrix:
                architecture:
                    - "386"
                    - "amd64"
                    - "arm64"
                os:
                    - linux
                    - windows
                    - darwin
                exclude:
                    - os: darwin
                      architecture: 386
                include:
                    - os: linux
                      runner: ubuntu-latest
                    - os: windows
                      runner: windows-latest
                    - os: darwin
                      runner: macos-latest
        runs-on: ${{ matrix.runner }}
        steps:
            - name: Harden Runner
              uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
              with:
                  egress-policy: audit

            - name: Checkout
              uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
              with:
                  fetch-depth: 1

            - name: Install Go
              uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
              with:
                  go-version-file: go.mod

            - name: Install nfpm
              if: matrix.os == 'linux'
              run: |
                  go install github.com/goreleaser/nfpm/v2/cmd/nfpm@v2.43.0
                  echo "$(go env GOPATH)/bin" >> "$GITHUB_PATH"

            - name: Build
              env:
                  CGO_ENABLED: "0"
                  GOOS: ${{matrix.os}}
                  GOARCH: ${{matrix.architecture}}
              run: |
                  go version
                  make

            - name: Upload Artifacts
              if: matrix.os == 'linux'
              uses: actions/upload-artifact@v4
              with:
                  name: sonic-${{ matrix.os }}-${{ matrix.architecture }}
                  path: |
                      sonic-${{ matrix.os }}-${{ matrix.architecture }}
                  compression-level: '9'

            - name: Build Package
              if: matrix.os == 'linux'
              env:
                  CGO_ENABLED: "0"
                  GOOS: ${{matrix.os}}
                  GOARCH: ${{matrix.architecture}}
              run: make package

            - name: Compress xz
              if: matrix.os != 'windows'
              run: xz -T0 -9 sonic-*-*

            - name: Compress 7z (Windows)
              if: matrix.os == 'windows'
              shell: powershell
              run: |
                  $sevenZip = "C:\Program Files\7-Zip\7z.exe"
                  if (-Not (Test-Path $sevenZip)) { throw "7-Zip not found at $sevenZip" }
                  & $sevenZip a -t7z -ssw -mmt=on -mx=9 "sonic-${{ matrix.os }}-${{ matrix.architecture }}.7z" "sonic-${{ matrix.os }}-${{ matrix.architecture }}.exe"

            - name: Upload Non-Windows Release (via GitHub CLI)
              if: matrix.os != 'windows'
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              shell: bash
              run: |
                  shopt -s nullglob
                  for file in sonic-*-* SonicWeb*.rpm SonicWeb*.deb
                  do
                      gh release upload "${{ github.event.release.tag_name }}" "$file" --clobber
                  done

            - name: Upload Windows Release (via GitHub CLI)
              if: matrix.os == 'windows'
              shell: powershell
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  Set-StrictMode -Version Latest
                  $ErrorActionPreference = 'Stop'
                  $tag = "${{ github.event.release.tag_name }}"
                  Get-ChildItem -File -Path . -Filter 'sonic-*-*.7z' | ForEach-Object {
                      gh release upload $tag $_.FullName --clobber
                  }

    BuildDockerMultiArch:
        permissions:
            packages: write
        runs-on: ubuntu-latest
        needs: Build
        steps:
            - name: Generate Variables
              shell: bash
              run: |
                  echo "IMAGE_NAME=ghcr.io/${GITHUB_REPOSITORY,,}" >> "$GITHUB_ENV"

            - name: Checkout
              uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
              with:
                  fetch-depth: 1

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to GHCR
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Download Artifacts
              uses: actions/download-artifact@v5
              with:
                  pattern: sonic-linux-*
                  merge-multiple: true
                  path: .

            - name: Build Docker Image
              uses: docker/build-push-action@v6
              with:
                  context: .
                  platforms: linux/amd64,linux/arm64
                  pull: true
                  push: true
                  cache-to: type=gha,mode=max
                  tags: |
                      ${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}
                      ${{ env.IMAGE_NAME }}:latest

            - name: Inspect final manifests
              run: |
                  docker manifest inspect ${IMAGE_NAME}:${{ github.event.release.tag_name }}
                  docker manifest inspect ${IMAGE_NAME}:latest
