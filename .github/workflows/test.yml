# SPDX-FileCopyrightText: 2025 The SonicWeb contributors.
# SPDX-License-Identifier: MPL-2.0

name: Tests

on:
    push:
        branches:
          - master
    pull_request:
        branches:
          - master

# Declare default permissions as read-only.
permissions: read-all

jobs:
    FormatCheck:
        strategy:
            matrix:
                go-version:
                  - "stable"
        runs-on: ubuntu-latest
        steps:
          - name: Harden Runner
            uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
            with:
                egress-policy: audit

          - name: Install Go
            uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
            with:
                go-version: ${{matrix.go-version}}

          - name: Checkout
            uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
            with:
                fetch-depth: 1

          - name: FormatCheck
            run: if [ `go fmt ./... | wc -l` -gt 0 ] ; then echo "Found unformatted code" ; exit 1 ; else exit 0 ; fi

    StaticCheck:
        strategy:
            matrix:
                go-version:
                  - "stable"
        runs-on: ubuntu-latest
        steps:
          - name: Harden Runner
            uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
            with:
                egress-policy: audit

          - name: Install Go
            uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
            with:
                go-version: ${{matrix.go-version}}

          - name: Checkout
            uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
            with:
                fetch-depth: 1

          - name: StaticCheck
            uses: dominikh/staticcheck-action@024238d2898c874f26d723e7d0ff4308c35589a2 # v1.4.0
            with:
                version: latest
                install-go: false
                cache-key: ${{matrix.go-version}}

    Test:
        strategy:
            matrix:
                go-version:
                  - "stable"
                platform:
                  #- macos-latest
                  - ubuntu-latest
                  #- windows-latest
        runs-on: ${{matrix.platform}}
        steps:
          - name: Harden Runner
            uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
            with:
                egress-policy: audit

          - name: Checkout
            uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
            with:
                fetch-depth: 1

          - name: Install Go
            uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
            with:
                go-version-file: go.mod

          - name: Test
            run: go tool gotestsum --junitfile junit.xml -- -v `go list ./... | grep -v example` --covermode=count --coverpkg=./... --coverprofile=coverage.txt

          - name: Upload test results to Codecov
            if: ${{ !cancelled() }}
            uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
            with:
                token: ${{ secrets.CODECOV_TOKEN }}

          - name: Coverage
            run: go tool cover -func=coverage.txt

          - name: Upload coverage to Codecov
            uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
            with:
                token: ${{ secrets.CODECOV_TOKEN }}

    # This action is mainly composed of snippets of github.com/jidicula/go-fuzz-action
    FuzzTest:
        strategy:
            matrix:
                go-version:
                   - "stable"
                platform:
                  #- macos-latest
                  - ubuntu-latest
                  #- windows-latest
        runs-on: ${{ matrix.platform }}
        steps:
          - name: Harden Runner
            uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
            with:
                egress-policy: audit

          - name: Install Go
            uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
            with:
                go-version: ${{matrix.go-version}}

          - name: Checkout
            uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
            with:
                fetch-depth: 1

          - name: Run Fuzz Test
            shell: bash
            run: make fuzz

          - name: Upload fuzz failure seed corpus as run artifact
            if: failure()
            uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
            with:
                name: testdata
                if-no-files-found: ignore
                path: |
                    **/testdata/fuzz/**
                    **/testdata/**

          - run: echo "EVENT NAME IS ${{ github.event_name }}"
            if: failure()
            shell: bash

          - name: Save PR head commit SHA
            if: failure() && github.event_name == 'pull_request'
            shell: bash
            run: |
                SHA="${{ github.event.pull_request.head.sha }}"
                echo "SHA=$SHA" >> $GITHUB_ENV

          - name: Save latest commit SHA if not PR
            if: failure() && github.event_name != 'pull_request'
            shell: bash
            run: echo "SHA=${{ github.sha }}" >> $GITHUB_ENV

          - name: Output message
            if: failure()
            shell: bash
            run: |
                MESSAGE='Fuzz test failed on commit ${{ env.SHA }}. To troubleshoot locally, use the [GitHub CLI](https://cli.github.com) to download the seed corpus with\n```\ngh run download ${{ github.run_id }} -n testdata\n```'
                DEEPLINK="https://github.com/${{ github.repository }}/commit/${{ env.SHA }}"
                echo -e "${MESSAGE/${{ env.SHA }}/$DEEPLINK}"
                echo -e "${MESSAGE/${{ env.SHA }}/[${GITHUB_SHA:0:8}]($DEEPLINK)}" >> $GITHUB_STEP_SUMMARY
